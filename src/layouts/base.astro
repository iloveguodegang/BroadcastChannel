---
import '../assets/normalize.css'
import '../assets/style.css'
import '../assets/global.css'
import { SEO } from 'astro-seo'
import { getEnv } from '../lib/env'
import backToTopIcon from '../assets/back-to-top.svg'

const { SITE_URL } = Astro.locals
const { channel } = Astro.props

const locale = getEnv(import.meta.env, Astro, 'LOCALE')

const seo = channel?.seo
const canonical = SITE_URL.startsWith('http')
  ? new URL(SITE_URL).origin + Astro.url.pathname
  : Astro.url.origin + Astro.url.pathname
const origin = new URL(canonical).origin
const twitter = getEnv(import.meta.env, Astro, 'TWITTER')

function truncateText(text, max) {
  if (!text) return ''
  const str = String(text).trim()
  if (str.length <= max) return str
  return str.slice(0, Math.max(0, max - 1)) + '…'
}

// Build safe title (<=70 chars) and description (<=160 chars)
const baseTitle = channel?.title ?? ''
const pageTitle = seo?.title ?? ''
const siteTitleOverride = 'JVID-大陆版  官方正版写真免费观看！每日更新最新高清写真视频 隐藏版同步解锁，打开JVID大陆版 这是你撸了这么多年应得的！'
const combinedTitle = pageTitle
  ? (pageTitle !== baseTitle ? `${pageTitle} - ${baseTitle}` : pageTitle)
  : siteTitleOverride
const safeTitle = truncateText(combinedTitle, 70)

const rawDescription = (seo?.text ?? channel?.description ?? '').replace(/\s+/g, ' ').trim()
let candidateDescription = rawDescription
if (!candidateDescription || candidateDescription.length < 25) {
  if (baseTitle) {
    candidateDescription = [baseTitle, rawDescription].filter(Boolean).join(' - ')
  } else {
    candidateDescription = rawDescription || ''
  }
}
if (!candidateDescription || candidateDescription.length < 25) {
  candidateDescription = (baseTitle || origin || '').toString()
}
const safeDescription = truncateText(candidateDescription, 160)

const siteKeywords = 'JVID,JVID大陆版,純欲啾啾教主,ABBIE,Angela寶7,鮮奶布丁,飄飄哥,旺旺小仙,妍妍angel,Chenbb816,写真,白虎,高清,涩涩'

const seoParams = {
  title: safeTitle,
  description: safeDescription,
  canonical,
  noindex: getEnv(import.meta.env, Astro, 'NOINDEX'),
  nofollow: getEnv(import.meta.env, Astro, 'NOFOLLOW'),
  openGraph: {
    basic: {
      type: 'website',
      title: safeTitle,
      url: canonical,
      image: channel?.avatar ? channel.avatar : origin + '/favicon.ico',
    },
    optional: {
      description: safeDescription,
      locale: getEnv(import.meta.env, Astro, 'LOCALE'),
    },
  },
  extend: {
    link: [{ rel: 'icon', href: channel?.avatar ? channel?.avatar : '/favicon.svg' }],
    meta: [
      { name: 'keywords', content: siteKeywords },
    ],
  },
}

const HEADER_INJECT = getEnv(import.meta.env, Astro, 'HEADER_INJECT')
const FOOTER_INJECT = getEnv(import.meta.env, Astro, 'FOOTER_INJECT')
---

<!doctype html>
<html lang={locale ?? 'en'}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#f4f1ec" />
    <link rel="alternate" type="application/rss+xml" title={channel?.title} href={origin + '/rss.xml'} />
    <style is:inline>
      @view-transition {
        navigation: auto; /* enabled */
      }
    </style>
    <SEO
      {...seoParams}
      twitter={{
        card: 'summary_large_image',
        creator: twitter ? `@${twitter}` : undefined,
      }}
    />
    <Fragment set:html={HEADER_INJECT} />
  </head>

  <body>
    <div id="wrapper">
      <div id="container">
        <div id="main-container">
          <slot />
        </div>
        <div id="aside-container">
          <slot name="aside">
            <!-- Banner grid will be inserted here -->
          </slot>
        </div>
      </div>
    </div>
    <a href="#wrapper" id="back-to-top" aria-label="Back to top">
      <img {...backToTopIcon} alt="Back to Top" />
    </a>
    <Fragment set:html={FOOTER_INJECT} />
  </body>
</html>
