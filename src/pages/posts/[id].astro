---
import { getEnv } from '../../lib/env'
import voidFile from '../../assets/void.png'
import List from '../../components/list.astro'
import { getChannelInfo } from '../../lib/telegram'

const { SITE_URL } = Astro.locals

const channelInfo = await getChannelInfo(Astro)

const post = await getChannelInfo(Astro, {
  type: 'post',
  id: Astro.params.id,
})

const channel = {
  ...(channelInfo || {}),
  posts: [post],
  seo: post,
}

const staticProxy = getEnv(import.meta.env, Astro, 'STATIC_PROXY') ?? '/static/'

function truncateText(text, max) {
  if (!text) return ''
  const str = String(text).trim()
  if (str.length <= max) return str
  return str.slice(0, Math.max(0, max - 1)) + 'â€¦'
}

const h1Title = truncateText(post?.title ?? channelInfo?.title ?? '', 150)

export const prerender = false
---

<List channel={channel} before={false} after={false}>
  <div slot="header" id="breadcrumb">
    <img
      src={channel?.avatar?.startsWith('http')
        ? staticProxy + channel?.avatar
        : voidFile.src}
      alt={channel?.title}
      loading="eager"
      class="breadcrumb-avatar"
    />
    <div class="breadcrumb-title">
      <a href={SITE_URL} class="site-title" title={channel?.title}>
        {channel.title}
      </a>
      <h1 class="post-title">{h1Title}</h1>
    </div>
  </div>
</List>
